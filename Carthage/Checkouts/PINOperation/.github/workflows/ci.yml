---
name: CI

on:
  push:
    branches:
      - master
      - 'releases/*'
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: macOS-latest
    strategy:
      matrix:
        platform: ['iOS Simulator,name=iPhone 8']
    steps:
      - uses: actions/checkout@v2
      - name: Analyze and Test
        run: |
          xcodebuild clean analyze test \
            -destination "platform=${{ matrix.platform }}" \
            -sdk "iphonesimulator" \
            -project PINOperation.xcodeproj \
            -scheme PINOperation \
            ONLY_ACTIVE_ARCH=NO \
            CODE_SIGNING_REQUIRED=NO \
            CLANG_ANALYZER_OUTPUT=plist-html \
            CLANG_ANALYZER_OUTPUT_DIR="$(pwd)/clang" \
          | xcpretty
          if [[ -n `find $(pwd)/clang -name "*.html"` ]] ; then rm -rf $(pwd)/clang; exit 1; fi
          rm -rf $(pwd)/clang
  cocoapods:
    name: CocoaPods
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint
        run: pod lib lint
  carthage:
    name: Carthage
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: carthage build --no-skip-current
  spm:
    name: Swift Package Manager tests
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: swift test
  example:
    name: Build Example project
    runs-on: macOS-latest
    strategy:
      matrix:
        platform: ['iOS Simulator,name=iPhone 8']
    steps:
      - uses: actions/checkout@v2
      - name: Install Pods
        run: cd Example && pod install
      - name: Build 
        run: |
          cd Example && xcodebuild clean analyze \
            -destination "platform=${{ matrix.platform }}" \
            -sdk "iphonesimulator" \
            -workspace PINOperationExample.xcworkspace \
            -scheme PINOperationExample \
            ONLY_ACTIVE_ARCH=NO \
            CODE_SIGNING_REQUIRED=NO \
            CLANG_ANALYZER_OUTPUT=plist-html \
            CLANG_ANALYZER_OUTPUT_DIR="$(pwd)/clang" \
          | xcpretty
          if [[ -n `find $(pwd)/clang -name "*.html"` ]] ; then rm -rf $(pwd)/clang; exit 1; fi
          rm -rf $(pwd)/clang
